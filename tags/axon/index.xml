<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Axon on c3smonkey&#39;s blog</title>
    <link>https://blog.marcelwidmer.org/tags/axon/</link>
    <description>Recent content in Axon on c3smonkey&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.marcelwidmer.org/tags/axon/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Axon Framework - MongoDB extension</title>
      <link>https://blog.marcelwidmer.org/posts/2022/2022-24-09-axon-mongodb-extention/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.marcelwidmer.org/posts/2022/2022-24-09-axon-mongodb-extention/</guid>
      <description>In this blog post we look into Axon Framework is a framework for building evolutionary, event-driven microservice systems, based on the principles of Domain Driven Design, Command-Query Responsibility Segregation (CQRS) and Event Sourcing.
We will disable the Axon Server and replaced it with the MongoDB extension this extension provides functionality to leverage Mongo as an EventStorageEngine (to be used by an EventStore) and TokenStore.
For more information on anything Axon, please visit our website, Axon Framework.</description>
    </item>
    
    <item>
      <title>AxonIQ</title>
      <link>https://blog.marcelwidmer.org/posts/2019/2019-10-22-axon/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.marcelwidmer.org/posts/2019/2019-10-22-axon/</guid>
      <description>Commands:
A command tells our application to do something Events:
An event is a notification of something that has happened. Query:
Queries could be simplified by storing a copy of the data in a form easily In many cases, updating the query models can happen asynchronously from processing the transaction: eventual consistency Projection :
Optimized for the specific read use-cases (e.g. screens, API methods) Many separated ones instead of one big one Use carious technologies as appropriate (RDMS, Elastic, Mongo etc.</description>
    </item>
    
  </channel>
</rss>
